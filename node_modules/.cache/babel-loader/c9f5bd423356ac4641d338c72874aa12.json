{"ast":null,"code":"var _jsxFileName = \"/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js\";\nimport 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport './styles/form.scss';\nimport Button from '@material-ui/core/Button';\n/* eslint-enable */\n\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'; //像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404'\n    }\n  },\n  test: {\n    color: '#222b45'\n  }\n});\nconst inputStyles = makeStyles({\n  root: {// width: '100%',\n  },\n  props: {\n    // required: true,\n    // Name of the component ⚛️\n    MuiInputBase: {\n      // The default props to change\n      color: '#6600cc',\n      required: true\n    }\n  }\n});\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box'\n  }\n});\nconst usStyles = makeStyles(theme => ({\n  root: {\n    button: {\n      fontSize: '40px',\n      backgroundColor: '#6600cc'\n    }\n  }\n}));\nconst divStyle = {\n  fontSize: '40px',\n  color: '#6600cc'\n};\n\nfunction Testtt() {\n  const [state, setState] = React.useState({\n    firstName: \"\"\n  });\n\n  function handleChange(evt) {\n    setState({\n      firstName: evt.target.value\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    class: \"validate\",\n    placeholder: \"Input mail address\",\n    value: state.firstName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return /*#__PURE__*/React.createElement(TextValidator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Email\",\n    placeholder: \"Input mail address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    type: \"mail\",\n    style: divStyle,\n    helperText: \"Incorrect entry.\",\n    onChange: this.handleChange,\n    name: \"email\",\n    value: formData.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Your registered company name. Example: \\\"VASP LTD.\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyName\",\n    placeholder: \"Your company name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root\n    },\n    validators: ['minNumber:0', 'maxNumber:255', 'matchRegexp:^[0-9]$'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"4 uppercase letters to represent your company name. Example: \\\"Coinbase exchange\\\" could be \\\"CBSE\\\", \\\"Sygna\\\" could be \\\"SYGN\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPCodeName\",\n    placeholder: \"Input VASP code Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n\n  const handleChange = event => {\n    setCountryCode(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"country-code-label\",\n    id: \"country-code\",\n    value: CountryCode,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"2 letters city abbreviation. Example: \\\"NY\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CityCode\",\n    placeholder: \"Input city code\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, \"Company registration code under local jurisdiction.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyID\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n\n  const handleChange = event => {\n    setVASPcatagory(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-catagory\",\n    id: \"vasp-catagory\",\n    value: VASPcatagory,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, \"API endpoint for beneficiary VASP to receive API request from Bridge Server (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://bit.ly/2NhZUlS\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 84\n    }\n  }, \"http://bit.ly/2NhZUlS\"), \"). Example: \\\"\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"beneficiary.example/api/v1/bridge/transaction/permission-request\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPapi\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, \"To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VIPAddress\",\n    placeholder: \"Input fixed static IP address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.test\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, \"Wrong\"));\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState(new Date(''));\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; // const [selectedDate, handleDateChange] = useState(new Date(''));\n\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"Default date: three days after the registration is done.\"), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    format: \"MM/dd/yyyy\",\n    placeholder: 'MM/dd/yyyy',\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    margin: \"normal\",\n    id: \"time-picker\",\n    placeholder: '00:00',\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n\n  const handleChange = event => {\n    setVASPubKey(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-pub-key-label\",\n    id: \"vasp-pub-key\",\n    value: VASPubKey,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, \"Select Public Type\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, \"HEX\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, \"PEM\")));\n}\n\nfunction VASPubKeyType() {\n  return /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPubKeyType\",\n    multiline: true,\n    rows: 4,\n    fullWidth: true,\n    placeholder: \"'ex.\\\\n-----BEGIN PUBLIC KEY-----\\\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\\\n-----END PUBLIC KEY-----'\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction KeyPair() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, \"Key pair generation\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, \"This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to provide the public key to Bridge.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }), \"Generate an EC private key, of size 256, and output it to a file named key.pem: >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }), \"Extract the public key from the key pair, which can be used in the encryption: >> $ openssl ec -in key.pem -pubout -out public.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }), \"After running these two commands you will generate two files: key.pem and public.pem in your working directory. Please provide us with the public.pem key.pem is referenced in the creation of a digital signature on the message. Please take care not to expose the private key. Ensure that you only do so on a system you consider to be secure.\"));\n}\n\nfunction CTA() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta_block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, \"If you have any questions with the information in this email, please let us know at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"mailto:contact@sygna.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 93\n    }\n  }, \"contact@sygna.io\"), \" or visit our website at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"sygna.io\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 172\n    }\n  }, \"sygna.io\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"\",\n    value: \"Submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  })));\n} //什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\n\n\nexport default class Header1 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        email: '',\n        password: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n  }\n\n  render() {\n    const {\n      formData,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }\n    }, \"Welcome to Sygna Bridge VASP Registration\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n      id: \"registration_form\",\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(TextField, {\n      id: \"Email\",\n      placeholder: \"Input mail address\",\n      InputLabelProps: {\n        shrink: true\n      },\n      type: \"mail\",\n      style: divStyle,\n      helperText: \"Incorrect entry.\",\n      onChange: this.handleChange,\n      name: \"email\",\n      value: formData.email,\n      validators: ['required', 'isEmail'],\n      errorMessages: ['this field is required', 'email is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }, \"Email Address\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 7\n      }\n    }, \"Company Name\"), /*#__PURE__*/React.createElement(CompanyName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 7\n      }\n    }, \"VASP Code Name\"), /*#__PURE__*/React.createElement(VASPCode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }\n    }, \"Country Code\"), /*#__PURE__*/React.createElement(CountryCode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 7\n      }\n    }, \"City Code\"), /*#__PURE__*/React.createElement(CityCode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 7\n      }\n    }, \"Company ID\"), /*#__PURE__*/React.createElement(CompanyID, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 7\n      }\n    }, \"VASP Category\"), /*#__PURE__*/React.createElement(VASPcatagory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }, \"Beneficiary VASP API endpoint URL\"), /*#__PURE__*/React.createElement(VASPapi, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }, \"Fixed static IP Address\"), /*#__PURE__*/React.createElement(IPAddress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }\n    }, \"Go-Live Date\"), /*#__PURE__*/React.createElement(GoLiveDate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }, \"VASP Public Key\"), /*#__PURE__*/React.createElement(VASPubKey, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VASPubKeyType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(KeyPair, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CTA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n; // Test /////////////////////////////////////////////\n\nconst validationRules = {\n  required: val => val !== null && val !== undefined && val !== \"\",\n  email: email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n};\n\nclass Test extends React.Component {\n  constructor() {\n    super();\n\n    this.handleFieldChange = e => {\n      let newState = { ...this.state\n      };\n      newState[e.target.name].value = e.target.value;\n      this.validateForm(newState);\n    };\n\n    this.handleSetTouched = e => {\n      let field = { ...this.state[e.target.name],\n        isTouched: true\n      };\n      this.setState({\n        [e.target.name]: { ...field\n        }\n      });\n    };\n\n    this.getClassName = fieldName => {\n      const field = this.state[fieldName];\n      return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n    };\n\n    this.validateForm = newState => {\n      newState = newState || { ...this.state\n      };\n      this.fields.map(fieldName => {\n        let newField = newState[fieldName];\n        newField.errors = [];\n        newField.isValid = true;\n        this.formValidationRules[fieldName].map(vRule => {\n          if (!vRule.rule(this.state[fieldName].value)) {\n            newField.errors.push(vRule.message);\n            newField.isValid = false;\n          }\n\n          newState[fieldName] = newField;\n        });\n      });\n      this.setState(newState);\n    };\n\n    this.formValidationRules = {\n      email: [{\n        rule: validationRules.required,\n        message: \"Email is required\"\n      }, {\n        rule: validationRules.email,\n        message: \"Email is invalid\"\n      }]\n    };\n    this.fields = [\"email\"];\n    this.state = {\n      email: {\n        value: \"\",\n        isTouched: false,\n        isValid: false,\n        errors: []\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.validateForm();\n  }\n\n  render() {\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: !email.isValid ? \"has-error\" : \"\",\n      name: \"email\",\n      value: this.state.email.value,\n      onChange: this.handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }\n    }), email.errors.length > 0 && email.errors.map((err, i) => /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 15\n      }\n    }, err))));\n  }\n\n} // Test2 /////////////////////////////////////////////\n\n\nclass SimpleFormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        email: '',\n        password: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n  }\n\n  render() {\n    const {\n      formData,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 15\n      }\n    }, \"Simple form\"), /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Email\",\n      onChange: this.handleChange,\n      name: \"email\",\n      value: formData.email,\n      validators: ['required', 'isEmail'],\n      errorMessages: ['this field is required', 'email is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Password\",\n      onChange: this.handleChange,\n      name: \"password\",\n      value: formData.password,\n      validators: ['required'],\n      errorMessages: ['this field is required'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: submitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 15\n      }\n    }, submitted && 'Your form is submitted!' || !submitted && 'Submit'));\n  }\n\n}","map":{"version":3,"sources":["/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js"],"names":["React","makeStyles","TextField","InputLabel","MenuItem","FormHelperText","FormControl","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Button","ValidatorForm","TextValidator","testStyles","root","display","width","backgroundColor","test","color","inputStyles","props","MuiInputBase","required","selectStyle","fontSize","fontWeight","paddingTop","paddingBottom","border","boxSizing","usStyles","theme","button","divStyle","Testtt","state","setState","useState","firstName","handleChange","evt","target","value","Email","classes","shrink","formData","email","CompanyName","VASPCode","label","CountryCode","setCountryCode","event","option","CityCode","CompanyID","VASPcatagory","setVASPcatagory","VASPapi","IPAddress","GoLiveDate","selectedDate","setSelectedDate","Date","handleDateChange","date","VASPubKey","setVASPubKey","VASPubKeyType","KeyPair","CTA","Header1","Component","password","submitted","name","handleSubmit","setTimeout","render","validationRules","val","undefined","re","String","toLowerCase","Test","constructor","handleFieldChange","e","newState","validateForm","handleSetTouched","field","isTouched","getClassName","fieldName","isValid","fields","map","newField","errors","formValidationRules","vRule","rule","push","message","componentWillMount","length","err","i","SimpleFormExample"],"mappings":";AAAA,OAAO,UAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,sBAJP;AAKA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA;;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGd,UAAU,CAAC;AAC5Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,KAAK,EAAE,KAFH;AAGJC,IAAAA,eAAe,EAAE,SAHb;AAIJ,aAAS;AACPA,MAAAA,eAAe,EAAE;AADV;AAJL,GADsB;AAS5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AATsB,CAAD,CAA7B;AAcA,MAAMC,WAAW,GAAGrB,UAAU,CAAC;AAC7Be,EAAAA,IAAI,EAAE,CACJ;AADI,GADuB;AAI7BO,EAAAA,KAAK,EAAE;AACL;AACA;AACAC,IAAAA,YAAY,EAAE;AACZ;AACAH,MAAAA,KAAK,EAAE,SAFK;AAGZI,MAAAA,QAAQ,EAAE;AAHE;AAHT;AAJsB,CAAD,CAA9B;AAeA,MAAMC,WAAW,GAAGzB,UAAU,CAAC;AAC7Be,EAAAA,IAAI,EAAE;AACJW,IAAAA,QAAQ,EAAE,MADN;AAEJN,IAAAA,KAAK,EAAE,SAFH;AAGJO,IAAAA,UAAU,EAAE,KAHR;AAIJC,IAAAA,UAAU,EAAE,MAJR;AAKJC,IAAAA,aAAa,EAAE,MALX;AAMJC,IAAAA,MAAM,EAAE,mBANJ;AAOJZ,IAAAA,eAAe,EAAE,SAPb;AAQJa,IAAAA,SAAS,EAAE;AARP;AADuB,CAAD,CAA9B;AAaA,MAAMC,QAAQ,GAAGhC,UAAU,CAACiC,KAAK,KAAK;AACpClB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,MAAM,EAAE;AACNR,MAAAA,QAAQ,EAAE,MADJ;AAENR,MAAAA,eAAe,EAAE;AAFX;AADJ;AAD8B,CAAL,CAAN,CAA3B;AASA,MAAMiB,QAAQ,GAAG;AACfT,EAAAA,QAAQ,EAAE,MADK;AAEfN,EAAAA,KAAK,EAAE;AAFQ,CAAjB;;AAKA,SAASgB,MAAT,GAAkB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvC,KAAK,CAACwC,QAAN,CAAe;AACvCC,IAAAA,SAAS,EAAE;AAD4B,GAAf,CAA1B;;AAGA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzBJ,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,SAAS,EAAEE,GAAG,CAACC,MAAJ,CAAWC;AAAxB,KAAD,CAAR;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,eAGE;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,KAAK,EAAC,UAArC;AAAgD,IAAA,WAAW,EAAC,oBAA5D;AACE,IAAA,KAAK,EAAEP,KAAK,CAACG,SADf;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAE0B,IAAA,QAAQ,MAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AAWD;;AAED,SAASI,KAAT,GAAiB;AACf,QAAMC,OAAO,GAAG,CAACzB,WAAW,EAAZ,EAAgBW,QAAQ,EAAxB,CAAhB;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,OAAd;AAAsB,IAAA,WAAW,EAAC,oBAAlC;AACA,IAAA,eAAe,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAV,KADjB;AAEA,IAAA,IAAI,EAAC,MAFL;AAEY,IAAA,KAAK,EAAEZ,QAFnB;AAGE,IAAA,UAAU,EAAC,kBAHb;AAIE,IAAA,QAAQ,EAAE,KAAKM,YAJjB;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAEO,QAAQ,CAACC,KANlB;AAOE,IAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAPd;AAQE,IAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,oBAA3B,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAcD;;AAED,SAASC,WAAT,GAAuB;AACrB,QAAMJ,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADF,eAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,aAAd;AAA4B,IAAA,WAAW,EAAC,mBAAxC;AACA,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADjB;AACoC,IAAA,OAAO,EAAE;AAC3ChC,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B;AAD6B,KAD7C;AAEyB,IAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,eAAhB,EAAiC,qBAAjC,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD;;AAED,SAASoC,QAAT,GAAoB;AAClB,QAAML,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADF,eAIE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,cAAd;AAA6B,IAAA,WAAW,EAAC,sBAAzC;AACE,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADnB;AAEE,IAAA,OAAO,EAAE;AAAEhC,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAAhB;AAAsBqC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AAArC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAUD;;AAED,SAASC,WAAT,GAAuB;AACrB,QAAMP,OAAO,GAAGrB,WAAW,EAA3B;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgCvD,KAAK,CAACwC,QAAN,CAAe,EAAf,CAAtC;;AACA,QAAME,YAAY,GAAIc,KAAD,IAAW;AAC9BD,IAAAA,cAAc,CAACC,KAAK,CAACZ,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,oBAAhB;AAAqC,IAAA,EAAE,EAAC,cAAxC;AAAuD,IAAA,KAAK,EAAES,WAA9D;AAA2E,IAAA,QAAQ,EAAEZ,YAArF;AAAmG,IAAA,YAAY,MAA/G;AACE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KADd;AAEE,IAAA,OAAO,EAAE;AAAE1B,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAAhB;AAAsByC,MAAAA,MAAM,EAAEV,OAAO,CAACU;AAAtC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFF,CADF;AAeD;;AAED,SAASC,QAAT,GAAoB;AAClB,QAAMX,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,eAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,UAAd;AAAyB,IAAA,WAAW,EAAC,iBAArC;AACE,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADnB;AACsC,IAAA,OAAO,EAAE;AAC7ChC,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAD+B;AACzBqC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AADU,KAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD;;AAED,SAASM,SAAT,GAAqB;AACnB,QAAMZ,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADF,eAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAA0B,IAAA,WAAW,EAAC,kBAAtC;AACA,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADjB;AACoC,IAAA,OAAO,EAAE;AAC3ChC,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAD6B;AACvBqC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AADQ,KAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD;;AAED,SAASO,YAAT,GAAwB;AACtB,QAAMb,OAAO,GAAGrB,WAAW,EAA3B;AACA,QAAM,CAACkC,YAAD,EAAeC,eAAf,IAAkC7D,KAAK,CAACwC,QAAN,CAAe,EAAf,CAAxC;;AACA,QAAME,YAAY,GAAIc,KAAD,IAAW;AAC9BK,IAAAA,eAAe,CAACL,KAAK,CAACZ,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,eAAhB;AAAgC,IAAA,EAAE,EAAC,eAAnC;AAAmD,IAAA,KAAK,EAAEe,YAA1D;AAAwE,IAAA,QAAQ,EAAElB,YAAlF;AAAgG,IAAA,YAAY,MAA5G;AACA,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KADZ;AAC+C,IAAA,OAAO,EAAE;AACtD1B,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IADwC;AAClCqC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AADmB,KADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFF,CADF;AAeD;;AAED,SAASS,OAAT,GAAmB;AACjB,QAAMf,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAC6E;AAAG,IAAA,IAAI,EAAC,uBAAR;AAAgC,IAAA,MAAM,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAD7E,iCAEQ;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,MAAM,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFR,CADF,eAKE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,SAAd;AAAwB,IAAA,WAAW,EAAC,kBAApC;AACA,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADjB;AACoC,IAAA,OAAO,EAAE;AAC3ChC,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAD6B;AACvBqC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AADQ,KAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAWD;;AAED,SAASU,SAAT,GAAqB;AACnB,QAAMhB,OAAO,GAAGzB,WAAW,EAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJADF,eAKE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,YAAd;AAA2B,IAAA,WAAW,EAAC,+BAAvC;AACA,IAAA,eAAe,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KADjB;AACoC,IAAA,OAAO,EAAE;AAC3ChC,MAAAA,IAAI,EAAE+B,OAAO,CAAC3B;AAD6B,KAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAQI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,CADF;AAcD;;AAED,SAAS4C,UAAT,GAAsB;AACpB,QAAMjB,OAAO,GAAGhC,UAAU,EAA1B;AACA,QAAM,CAACkD,YAAD,EAAeC,eAAf,IAAkClE,KAAK,CAACwC,QAAN,CAAe,IAAI2B,IAAJ,CAAS,EAAT,CAAf,CAAxC;;AACA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjCH,IAAAA,eAAe,CAACG,IAAD,CAAf;AACD,GAFD,CAHoB,CAMpB;;;AACA,sBACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE7D,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,eAIE,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,MAAM,EAAC,YAHT;AAIE,IAAA,WAAW,EAAE,YAJf;AAKE,IAAA,KAAK,EAAEyD,YALT;AAME,IAAA,QAAQ,EAAEG,gBANZ;AAOE,IAAA,mBAAmB,EAAE;AAAE,oBAAc;AAAhB,KAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAaE,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,WAAW,EAAE,OAHf;AAIE,IAAA,KAAK,EAAEH,YAJT;AAKE,IAAA,QAAQ,EAAEG,gBALZ;AAME,IAAA,mBAAmB,EAAE;AAAE,oBAAc;AAAhB,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAwBD;;AAED,SAASE,SAAT,GAAqB;AACnB,QAAMvB,OAAO,GAAGrB,WAAW,EAA3B;AACA,QAAM,CAAC4C,SAAD,EAAYC,YAAZ,IAA4BvE,KAAK,CAACwC,QAAN,CAAe,EAAf,CAAlC;;AACA,QAAME,YAAY,GAAIc,KAAD,IAAW;AAC9Be,IAAAA,YAAY,CAACf,KAAK,CAACZ,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAGA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,oBAAhB;AAAqC,IAAA,EAAE,EAAC,cAAxC;AAAuD,IAAA,KAAK,EAAEyB,SAA9D;AAAyE,IAAA,QAAQ,EAAE5B,YAAnF;AAAiG,IAAA,YAAY,MAA7G;AACA,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KADZ;AAEA,IAAA,OAAO,EAAE;AAAE1B,MAAAA,IAAI,EAAE+B,OAAO,CAAC/B,IAAhB;AAAsByC,MAAAA,MAAM,EAAEV,OAAO,CAACU;AAAtC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CAFF,CADF;AAYD;;AAED,SAASe,aAAT,GAAyB;AACvB,sBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,eAAd;AAA8B,IAAA,SAAS,MAAvC;AAAwC,IAAA,IAAI,EAAE,CAA9C;AAAiD,IAAA,SAAS,EAAE,IAA5D;AACA,IAAA,WAAW,EAAC,6LADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID;;AAED,SAASC,OAAT,GAAmB;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4JAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,4JAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,qJASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,yVAFF,CADF;AAoBD;;AAED,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GACsF;AAAG,IAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADtF,4CACqK;AAAG,IAAA,IAAI,EAAC,UAAR;AACnK,IAAA,MAAM,EAAC,QAD4J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrK,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,EAA1B;AAA6B,IAAA,KAAK,EAAC,QAAnC;AAA4C,IAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAWD,C,CAGD;AACA;;;AACA,eAAe,MAAMC,OAAN,SAAsB3E,KAAK,CAAC4E,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDtC,KADmD,GAC3C;AACNW,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAEN2B,QAAAA,QAAQ,EAAE;AAFJ,OADJ;AAKNC,MAAAA,SAAS,EAAE;AALL,KAD2C;;AAAA,SASnDpC,YATmD,GASnCc,KAAD,IAAW;AACxB,YAAM;AAAEP,QAAAA;AAAF,UAAe,KAAKX,KAA1B;AACAW,MAAAA,QAAQ,CAACO,KAAK,CAACZ,MAAN,CAAamC,IAAd,CAAR,GAA8BvB,KAAK,CAACZ,MAAN,CAAaC,KAA3C;AACA,WAAKN,QAAL,CAAc;AAAEU,QAAAA;AAAF,OAAd;AACD,KAbkD;;AAAA,SAenD+B,YAfmD,GAepC,MAAM;AACnB,WAAKzC,QAAL,CAAc;AAAEuC,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AACrCG,QAAAA,UAAU,CAAC,MAAM,KAAK1C,QAAL,CAAc;AAAEuC,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP,EAA4C,IAA5C,CAAV;AACH,OAFD;AAGD,KAnBkD;AAAA;;AAoBnDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjC,MAAAA,QAAF;AAAY6B,MAAAA;AAAZ,QAA0B,KAAKxC,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,CADF,eAIE,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAC,mBAAlB;AACM,MAAA,GAAG,EAAC,MADV;AAEM,MAAA,QAAQ,EAAE,KAAK0C,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADI,eAEJ,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,OAAd;AAAsB,MAAA,WAAW,EAAC,oBAAlC;AACA,MAAA,eAAe,EAAE;AAAEhC,QAAAA,MAAM,EAAE;AAAV,OADjB;AAEA,MAAA,IAAI,EAAC,MAFL;AAEY,MAAA,KAAK,EAAEZ,QAFnB;AAGE,MAAA,UAAU,EAAC,kBAHb;AAIE,MAAA,QAAQ,EAAE,KAAKM,YAJjB;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEO,QAAQ,CAACC,KANlB;AAOE,MAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAPd;AAQE,MAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,oBAA3B,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAJF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CAhBF,eAoBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,eAEJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CApBF,eAwBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,eAEJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAxBF,eA4BE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,eAEJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CA5BF,eAgCE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADI,eAEJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAhCF,eAoCE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADI,eAEJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CApCF,eAwCE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADI,eAEJ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAxCF,eA4CE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADI,eAEJ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CA5CF,eAgDE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAhDF,eAoDE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CApDF,eAwDE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAxDF,eA6DE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,eA8DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DF,CAJF,CADF;AAuED;;AA7FkD;AA8FpD,C,CAGD;;AACA,MAAMiC,eAAe,GAAG;AACtB1D,EAAAA,QAAQ,EAAG2D,GAAD,IAASA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAAxB,IAAqCD,GAAG,KAAK,EAD1C;AAEtBlC,EAAAA,KAAK,EAAGA,KAAD,IAAW;AAChB,UAAMoC,EAAE,GAAG,yJAAX;AACA,WAAOA,EAAE,CAAClE,IAAH,CAAQmE,MAAM,CAACrC,KAAD,CAAN,CAAcsC,WAAd,EAAR,CAAP;AACD;AALqB,CAAxB;;AAQA,MAAMC,IAAN,SAAmBzF,KAAK,CAAC4E,SAAzB,CAAmC;AACjCc,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,iBAdc,GAcOC,CAAD,IAAO;AACzB,UAAIC,QAAQ,GAAG,EAAE,GAAG,KAAKvD;AAAV,OAAf;AACAuD,MAAAA,QAAQ,CAACD,CAAC,CAAChD,MAAF,CAASmC,IAAV,CAAR,CAAwBlC,KAAxB,GAAgC+C,CAAC,CAAChD,MAAF,CAASC,KAAzC;AACA,WAAKiD,YAAL,CAAkBD,QAAlB;AACD,KAlBa;;AAAA,SAoBdE,gBApBc,GAoBMH,CAAD,IAAO;AACxB,UAAII,KAAK,GAAG,EAAE,GAAG,KAAK1D,KAAL,CAAWsD,CAAC,CAAChD,MAAF,CAASmC,IAApB,CAAL;AAAgCkB,QAAAA,SAAS,EAAE;AAA3C,OAAZ;AACA,WAAK1D,QAAL,CAAc;AAAE,SAACqD,CAAC,CAAChD,MAAF,CAASmC,IAAV,GAAiB,EAAE,GAAGiB;AAAL;AAAnB,OAAd;AACD,KAvBa;;AAAA,SAyBdE,YAzBc,GAyBEC,SAAD,IAAe;AAC5B,YAAMH,KAAK,GAAG,KAAK1D,KAAL,CAAW6D,SAAX,CAAd;AACA,aAAOH,KAAK,CAACC,SAAN,IAAmB,CAACD,KAAK,CAACI,OAA1B,GAAoC,WAApC,GAAkD,EAAzD;AACD,KA5Ba;;AAAA,SA8BdN,YA9Bc,GA8BED,QAAD,IAAc;AAC3BA,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAE,GAAG,KAAKvD;AAAV,OAAvB;AACA,WAAK+D,MAAL,CAAYC,GAAZ,CAAiBH,SAAD,IAAe;AAC7B,YAAII,QAAQ,GAAGV,QAAQ,CAACM,SAAD,CAAvB;AACAI,QAAAA,QAAQ,CAACC,MAAT,GAAkB,EAAlB;AACAD,QAAAA,QAAQ,CAACH,OAAT,GAAmB,IAAnB;AACA,aAAKK,mBAAL,CAAyBN,SAAzB,EAAoCG,GAApC,CAAyCI,KAAD,IAAW;AACjD,cAAI,CAACA,KAAK,CAACC,IAAN,CAAW,KAAKrE,KAAL,CAAW6D,SAAX,EAAsBtD,KAAjC,CAAL,EAA8C;AAC5C0D,YAAAA,QAAQ,CAACC,MAAT,CAAgBI,IAAhB,CAAqBF,KAAK,CAACG,OAA3B;AACAN,YAAAA,QAAQ,CAACH,OAAT,GAAmB,KAAnB;AACD;;AACDP,UAAAA,QAAQ,CAACM,SAAD,CAAR,GAAsBI,QAAtB;AACD,SAND;AAOD,OAXD;AAYA,WAAKhE,QAAL,CAAcsD,QAAd;AACD,KA7Ca;;AAEZ,SAAKY,mBAAL,GAA2B;AACzBvD,MAAAA,KAAK,EAAE,CACL;AAAEyD,QAAAA,IAAI,EAAExB,eAAe,CAAC1D,QAAxB;AAAkCoF,QAAAA,OAAO,EAAE;AAA3C,OADK,EAEL;AAAEF,QAAAA,IAAI,EAAExB,eAAe,CAACjC,KAAxB;AAA+B2D,QAAAA,OAAO,EAAE;AAAxC,OAFK;AADkB,KAA3B;AAMA,SAAKR,MAAL,GAAc,CAAC,OAAD,CAAd;AACA,SAAK/D,KAAL,GAAa;AACXY,MAAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE,EAAT;AAAaoD,QAAAA,SAAS,EAAE,KAAxB;AAA+BG,QAAAA,OAAO,EAAE,KAAxC;AAA+CI,QAAAA,MAAM,EAAE;AAAvD;AADI,KAAb;AAGD;;AAmCDM,EAAAA,kBAAkB,GAAG;AACnB,SAAKhB,YAAL;AACD;;AAEDZ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhC,MAAAA;AAAF,QAAY,KAAKZ,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,MAAA,SAAS,EAAE,CAACY,KAAK,CAACkD,OAAP,GAAiB,WAAjB,GAA+B,EAD5C;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAK9D,KAAL,CAAWY,KAAX,CAAiBL,KAH1B;AAIE,MAAA,QAAQ,EAAE,KAAK8C,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQGzC,KAAK,CAACsD,MAAN,CAAaO,MAAb,GAAsB,CAAtB,IACC7D,KAAK,CAACsD,MAAN,CAAaF,GAAb,CAAiB,CAACU,GAAD,EAAMC,CAAN,kBACf;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GADH,CADF,CATJ,CADF,CADF;AAoBD;;AA1EgC,C,CA4EnC;;;AACA,MAAME,iBAAN,SAAgClH,KAAK,CAAC4E,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CtC,KAD8C,GACtC;AACJW,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAEN2B,QAAAA,QAAQ,EAAE;AAFJ,OADN;AAKJC,MAAAA,SAAS,EAAE;AALP,KADsC;;AAAA,SAS9CpC,YAT8C,GAS9Bc,KAAD,IAAW;AACtB,YAAM;AAAEP,QAAAA;AAAF,UAAe,KAAKX,KAA1B;AACAW,MAAAA,QAAQ,CAACO,KAAK,CAACZ,MAAN,CAAamC,IAAd,CAAR,GAA8BvB,KAAK,CAACZ,MAAN,CAAaC,KAA3C;AACA,WAAKN,QAAL,CAAc;AAAEU,QAAAA;AAAF,OAAd;AACH,KAb6C;;AAAA,SAe9C+B,YAf8C,GAe/B,MAAM;AACjB,WAAKzC,QAAL,CAAc;AAAEuC,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AACrCG,QAAAA,UAAU,CAAC,MAAM,KAAK1C,QAAL,CAAc;AAAEuC,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP,EAA4C,IAA5C,CAAV;AACH,OAFD;AAGH,KAnB6C;AAAA;;AAqB9CI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjC,MAAAA,QAAF;AAAY6B,MAAAA;AAAZ,QAA0B,KAAKxC,KAArC;AACA,wBACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,QAAQ,EAAE,KAAK0C,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,eAKI,oBAAC,aAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,QAAQ,EAAE,KAAKtC,YAFnB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAEO,QAAQ,CAACC,KAJpB;AAKI,MAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CALhB;AAMI,MAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,oBAA3B,CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAcI,oBAAC,aAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,QAAQ,EAAE,KAAKR,YAFnB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAEO,QAAQ,CAAC4B,QAJpB;AAKI,MAAA,UAAU,EAAE,CAAC,UAAD,CALhB;AAMI,MAAA,aAAa,EAAE,CAAC,wBAAD,CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,eAuBI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,QAAQ,EAAEC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOSA,SAAS,IAAI,yBAAd,IACI,CAACA,SAAD,IAAc,QAR1B,CAvBJ,CADJ;AAqCH;;AA5D6C","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport './styles/form.scss';\nimport Button from '@material-ui/core/Button';\n/* eslint-enable */\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n//像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404',\n    },\n  },\n  test: {\n    color: '#222b45',\n  }\n});\n\nconst inputStyles = makeStyles({\n  root: {\n    // width: '100%',\n  },\n  props: {\n    // required: true,\n    // Name of the component ⚛️\n    MuiInputBase: {\n      // The default props to change\n      color: '#6600cc',\n      required: true,\n    },\n  },\n});\n\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n  },\n});\n\nconst usStyles = makeStyles(theme => ({\n  root: {\n    button: {\n      fontSize: '40px',\n      backgroundColor: '#6600cc',\n    },\n  },\n}));\n\nconst divStyle = {\n  fontSize: '40px',\n  color: '#6600cc',\n};\n\nfunction Testtt() {\n  const [state, setState] = React.useState({\n    firstName: \"\"\n  })\n  function handleChange(evt) {\n    setState({ firstName: evt.target.value });\n  }\n  return (\n    <form>\n      <div class=\"input-field required\">\n        <label for=\"email\">Email Address</label>\n        <span>Your valid email address.</span>\n        <input id=\"email\" type=\"email\" class=\"validate\" placeholder=\"Input mail address\"\n          value={state.firstName}\n          onChange={handleChange} required />\n      </div>\n    </form>\n  );\n}\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return (\n    <TextValidator>\n      <FormHelperText>Your valid email address.</FormHelperText>\n      <TextField id=\"Email\" placeholder=\"Input mail address\" \n      InputLabelProps={{ shrink: true }}\n      type=\"mail\" style={divStyle}\n        helperText=\"Incorrect entry.\"\n        onChange={this.handleChange}\n        name=\"email\"\n        value={formData.email}\n        validators={['required', 'isEmail']}\n        errorMessages={['this field is required', 'email is not valid']} />\n    </TextValidator>\n  );\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Your registered company name. Example: \"VASP LTD.\"</FormHelperText>\n      <TextField id=\"CompanyName\" placeholder=\"Your company name\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, }} validators={['minNumber:0', 'maxNumber:255', 'matchRegexp:^[0-9]$']} />\n    </div>\n  );\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      4 uppercase letters to represent your company name. Example: \"Coinbase exchange\" could be \"CBSE\", \"Sygna\" could be \"SYGN\"\n      </FormHelperText>\n      <TextField id=\"VASPCodeName\" placeholder=\"Input VASP code Name\"\n        InputLabelProps={{ shrink: true, }} \n        classes={{ root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n  const handleChange = (event) => {\n    setCountryCode(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"country-code-label\" id=\"country-code\" value={CountryCode} onChange={handleChange} displayEmpty \n        inputProps={{ 'aria-label': 'Without label' }}\n        classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>2 letters city abbreviation. Example: \"NY\"</FormHelperText>\n      <TextField id=\"CityCode\" placeholder=\"Input city code\"\n        InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Company registration code under local jurisdiction.</FormHelperText>\n      <TextField id=\"CompanyID\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n  const handleChange = (event) => {\n    setVASPcatagory(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText></FormHelperText>\n      <Select labelId=\"vasp-catagory\" id=\"vasp-catagory\" value={VASPcatagory} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }} classes={{\n        root: classes.root, label: classes.label,}} >\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      API endpoint for beneficiary VASP to receive API request from Bridge Server (<a href=\"http://bit.ly/2NhZUlS\" target=\"_blank\">http://bit.ly/2NhZUlS</a>).\n    Example: \"<a href=\"#\" target=\"_blank\">beneficiary.example/api/v1/bridge/transaction/permission-request</a>\n      </FormHelperText>\n      <TextField id=\"VASPapi\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      To create a secure communication tunnel between Bridge and VASP servers, \n    Bridge can register VASP server static IP for identification. (optional)\n      </FormHelperText>\n      <TextField id=\"VIPAddress\" placeholder=\"Input fixed static IP address\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.test, }} />\n        <FormHelperText>\n        Wrong\n        </FormHelperText>\n    </div>\n  );\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState(new Date(''));\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  // const [selectedDate, handleDateChange] = useState(new Date(''));\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <FormHelperText>\n      Default date: three days after the registration is done.\n      </FormHelperText>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        format=\"MM/dd/yyyy\" \n        placeholder={'MM/dd/yyyy'}\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change date', }}\n      />\n      <KeyboardTimePicker\n        margin=\"normal\"\n        id=\"time-picker\" \n        placeholder={'00:00'}\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change time', }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n  const handleChange = (event) => {\n    setVASPubKey(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"vasp-pub-key-label\" id=\"vasp-pub-key\" value={VASPubKey} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }}\n      classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select Public Type</MenuItem>\n        <MenuItem value={1}>HEX</MenuItem>\n        <MenuItem value={2}>PEM</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPubKeyType() {\n  return (\n    <TextField id=\"VASPubKeyType\" multiline rows={4} fullWidth={true} \n    placeholder=\"'ex.\\n-----BEGIN PUBLIC KEY-----\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\n-----END PUBLIC KEY-----'\" />\n  );\n}\n\nfunction KeyPair() {\n  return (\n    <div className=\"info\">\n      <h6>Key pair generation</h6>\n      <p>\n        This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to\n        provide the public key to Bridge.\n        <br /><br />\n        Generate an EC private key, of size 256, and output it to a file named key.pem:\n        >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\n        <br /><br />\n        Extract the public key from the key pair, which can be used in the encryption:\n        >> $ openssl ec -in key.pem -pubout -out public.pem\n        <br /><br />\n        After running these two commands you will generate two files: key.pem and public.pem in your working\n        directory. Please provide us with the public.pem\n        key.pem is referenced in the creation of a digital signature on the message. Please take care not to\n        expose the private key. Ensure that you only do so on a system you consider to be secure.\n      </p>\n    </div>\n  );\n}\n\nfunction CTA() {\n  return (\n    <div className=\"cta_block\">\n      <p className=\"text\">\n        If you have any questions with the information in this email, please let us know at <a href=\"mailto:contact@sygna.io\">contact@sygna.io</a> or visit our website at <a href=\"sygna.io\"\n        target=\"_blank\">sygna.io</a>\n      </p>\n      <div className=\"cta\">\n        <input type=\"submit\" name=\"\" value=\"Submit\" className=\"btn btn-primary\" />\n      </div>\n    </div>\n  );\n}\n\n\n//什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\nexport default class Header1 extends React.Component {\n  state = {\n    formData: {\n        email: '',\n        password: '',\n    },\n    submitted: false,\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleSubmit = () => {\n    this.setState({ submitted: true }, () => {\n        setTimeout(() => this.setState({ submitted: false }), 5000);\n    });\n  }\n  render() {\n    const { formData, submitted } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"intro\">\n          <h2 className=\"title\">Welcome to Sygna Bridge VASP Registration</h2>\n        </div>\n        <ValidatorForm id=\"registration_form\"\n              ref=\"form\"\n              onSubmit={this.handleSubmit}\n        >\n          <TextValidator>\n      <FormHelperText>Your valid email address.</FormHelperText>\n      <TextField id=\"Email\" placeholder=\"Input mail address\" \n      InputLabelProps={{ shrink: true }}\n      type=\"mail\" style={divStyle}\n        helperText=\"Incorrect entry.\"\n        onChange={this.handleChange}\n        name=\"email\"\n        value={formData.email}\n        validators={['required', 'isEmail']}\n        errorMessages={['this field is required', 'email is not valid']} />\n    </TextValidator>\n          <div className=\"input-field required\">\n          <h5>Email Address</h5>\n          {/* <Email></Email> */}\n        </div>\n          <div className=\"input-field required\">\n      <h5>Company Name</h5>\n      <CompanyName></CompanyName>\n    </div>\n          <div className=\"input-field required\">\n      <h5>VASP Code Name</h5>\n      <VASPCode></VASPCode>\n    </div>\n          <div className=\"input-field required\">\n      <h5>Country Code</h5>\n      <CountryCode></CountryCode>\n    </div>\n          <div className=\"input-field required\">\n      <h5>City Code</h5>\n      <CityCode></CityCode>\n    </div>\n          <div className=\"input-field\">\n      <h5>Company ID</h5>\n      <CompanyID></CompanyID>\n    </div>\n          <div className=\"input-field required\">\n      <h5>VASP Category</h5>\n      <VASPcatagory></VASPcatagory>\n    </div>\n          <div className=\"input-field required\">\n      <h5>Beneficiary VASP API endpoint URL</h5>\n      <VASPapi></VASPapi>\n    </div>\n          <div className=\"input-field\">\n          <h5>Fixed static IP Address</h5>\n          <IPAddress></IPAddress>\n        </div>\n          <div className=\"input-field\">\n          <h5>Go-Live Date</h5>\n          <GoLiveDate></GoLiveDate>\n        </div>\n          <div className=\"input-field required\">\n          <h5>VASP Public Key</h5>\n          <VASPubKey></VASPubKey>\n          <VASPubKeyType></VASPubKeyType>\n        </div>\n          <KeyPair />\n          <CTA />\n        </ValidatorForm>\n      </div>\n    )\n  }\n};\n\n\n// Test /////////////////////////////////////////////\nconst validationRules = {\n  required: (val) => val !== null && val !== undefined && val !== \"\",\n  email: (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n};\n\nclass Test extends React.Component {\n  constructor() {\n    super();\n    this.formValidationRules = {\n      email: [\n        { rule: validationRules.required, message: \"Email is required\" },\n        { rule: validationRules.email, message: \"Email is invalid\" }\n      ]\n    };\n    this.fields = [\"email\"];\n    this.state = {\n      email: { value: \"\", isTouched: false, isValid: false, errors: [] }\n    };\n  }\n\n  handleFieldChange = (e) => {\n    let newState = { ...this.state };\n    newState[e.target.name].value = e.target.value;\n    this.validateForm(newState);\n  };\n\n  handleSetTouched = (e) => {\n    let field = { ...this.state[e.target.name], isTouched: true };\n    this.setState({ [e.target.name]: { ...field } });\n  };\n\n  getClassName = (fieldName) => {\n    const field = this.state[fieldName];\n    return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n  };\n\n  validateForm = (newState) => {\n    newState = newState || { ...this.state };\n    this.fields.map((fieldName) => {\n      let newField = newState[fieldName];\n      newField.errors = [];\n      newField.isValid = true;\n      this.formValidationRules[fieldName].map((vRule) => {\n        if (!vRule.rule(this.state[fieldName].value)) {\n          newField.errors.push(vRule.message);\n          newField.isValid = false;\n        }\n        newState[fieldName] = newField;\n      });\n    });\n    this.setState(newState);\n  };\n\n  componentWillMount() {\n    this.validateForm();\n  }\n\n  render() {\n    const { email } = this.state;\n    return (\n      <form>\n        <div className=\"field-group\">\n          <label>Email</label>\n          <input\n            className={!email.isValid ? \"has-error\" : \"\"}\n            name=\"email\"\n            value={this.state.email.value}\n            onChange={this.handleFieldChange}\n          />\n          {email.errors.length > 0 &&\n            email.errors.map((err, i) => (\n              <span key={i} className=\"error-message\">\n                {err}\n              </span>\n            ))\n          }\n        </div>\n      </form>\n    );\n  }\n}\n// Test2 /////////////////////////////////////////////\nclass SimpleFormExample extends React.Component {\n  state = {\n      formData: {\n          email: '',\n          password: '',\n      },\n      submitted: false,\n  }\n\n  handleChange = (event) => {\n      const { formData } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({ formData });\n  }\n\n  handleSubmit = () => {\n      this.setState({ submitted: true }, () => {\n          setTimeout(() => this.setState({ submitted: false }), 5000);\n      });\n  }\n\n  render() {\n      const { formData, submitted } = this.state;\n      return (\n          <ValidatorForm\n              ref=\"form\"\n              onSubmit={this.handleSubmit}\n          >\n              <h2>Simple form</h2>\n              <TextValidator\n                  label=\"Email\"\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  value={formData.email}\n                  validators={['required', 'isEmail']}\n                  errorMessages={['this field is required', 'email is not valid']}\n              />\n              <br />\n              <TextValidator\n                  label=\"Password\"\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  value={formData.password}\n                  validators={['required']}\n                  errorMessages={['this field is required']}\n              />\n              <br />\n              <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  disabled={submitted}\n              >\n                  {\n                      (submitted && 'Your form is submitted!')\n                      || (!submitted && 'Submit')\n                  }\n              </Button>\n          </ValidatorForm>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}