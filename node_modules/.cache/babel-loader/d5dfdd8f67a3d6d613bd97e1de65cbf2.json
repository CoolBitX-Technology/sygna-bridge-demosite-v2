{"ast":null,"code":"var _jsxFileName = \"/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js\";\nimport 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport './styles/form.scss'; //像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404'\n    }\n  },\n  test: {\n    color: '#222b45'\n  }\n});\nconst inputStyles = makeStyles({\n  root: {// width: '100%',\n  }\n});\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box'\n  }\n});\nconst usStyles = makeStyles(theme => ({\n  button: {\n    backgroundColor: '#e9eee9',\n    fontSize: '40px'\n  }\n}));\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Email\",\n    placeholder: \"Input mail address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    className: classes.button,\n    helperText: \"Incorrect entry.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Your registered company name. Example: \\\"VASP LTD.\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyName\",\n    placeholder: \"Your company name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"4 uppercase letters to represent your company name. Example: \\\"Coinbase exchange\\\" could be \\\"CBSE\\\", \\\"Sygna\\\" could be \\\"SYGN\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPCodeName\",\n    placeholder: \"Input VASP code Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n\n  const handleChange = event => {\n    setCountryCode(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"country-code-label\",\n    id: \"country-code\",\n    value: CountryCode,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"2 letters city abbreviation. Example: \\\"NY\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CityCode\",\n    placeholder: \"Input city code\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Company registration code under local jurisdiction.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyID\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n\n  const handleChange = event => {\n    setVASPcatagory(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-catagory\",\n    id: \"vasp-catagory\",\n    value: VASPcatagory,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"API endpoint for beneficiary VASP to receive API request from Bridge Server (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://bit.ly/2NhZUlS\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 84\n    }\n  }, \"http://bit.ly/2NhZUlS\"), \"). Example: \\\"\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"beneficiary.example/api/v1/bridge/transaction/permission-request\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPapi\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, \"To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VIPAddress\",\n    placeholder: \"Input fixed static IP address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.test\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Wrong\"));\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState('');\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, \"To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)\"), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    margin: \"normal\",\n    id: \"time-picker\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n\n  const handleChange = event => {\n    setVASPubKey(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-pub-key-label\",\n    id: \"vasp-pub-key\",\n    value: VASPubKey,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, \"Select Public Type\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"HEX\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"PEM\")));\n}\n\nfunction VASPubKeyType() {\n  return /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPubKeyType\",\n    multiline: true,\n    rows: 4,\n    fullWidth: true,\n    placeholder: \"'ex.\\\\n-----BEGIN PUBLIC KEY-----\\\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\\\n-----END PUBLIC KEY-----'\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction KeyPair() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, \"Key pair generation\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to provide the public key to Bridge.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), \"Generate an EC private key, of size 256, and output it to a file named key.pem: >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }), \"Extract the public key from the key pair, which can be used in the encryption: >> $ openssl ec -in key.pem -pubout -out public.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }), \"After running these two commands you will generate two files: key.pem and public.pem in your working directory. Please provide us with the public.pem key.pem is referenced in the creation of a digital signature on the message. Please take care not to expose the private key. Ensure that you only do so on a system you consider to be secure.\"));\n}\n\nfunction CTA() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta_block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, \"If you have any questions with the information in this email, please let us know at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"mailto:contact@sygna.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 93\n    }\n  }, \"contact@sygna.io\"), \" or visit our website at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"sygna.io\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 172\n    }\n  }, \"sygna.io\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"\",\n    value: \"Submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  })));\n} //什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\n\n\nexport default function Header1() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, \"Welcome to Sygna Bridge VASP Registration\")), /*#__PURE__*/React.createElement(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"registration_form\",\n    Validate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Email, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, \"Company Name\"), /*#__PURE__*/React.createElement(CompanyName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, \"VASP Code Name\"), /*#__PURE__*/React.createElement(VASPCode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, \"Country Code\"), /*#__PURE__*/React.createElement(CountryCode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, \"City Code\"), /*#__PURE__*/React.createElement(CityCode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, \"Company ID\"), /*#__PURE__*/React.createElement(CompanyID, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, \"VASP Category\"), /*#__PURE__*/React.createElement(VASPcatagory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, \"Beneficiary VASP API endpoint URL\"), /*#__PURE__*/React.createElement(VASPapi, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, \"Fixed static IP Address\"), /*#__PURE__*/React.createElement(IPAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, \"Go-Live Date\"), /*#__PURE__*/React.createElement(GoLiveDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, \"VASP Public Key\"), /*#__PURE__*/React.createElement(VASPubKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VASPubKeyType, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(KeyPair, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CTA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  })));\n}\n;\nconst validationRules = {\n  required: val => val !== null && val !== undefined && val !== \"\",\n  email: email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n};\n\nclass Test extends React.Component {\n  constructor() {\n    super();\n\n    this.handleFieldChange = e => {\n      let newState = { ...this.state\n      };\n      newState[e.target.name].value = e.target.value;\n      this.validateForm(newState);\n    };\n\n    this.handleSetTouched = e => {\n      let field = { ...this.state[e.target.name],\n        isTouched: true\n      };\n      this.setState({\n        [e.target.name]: { ...field\n        }\n      });\n    };\n\n    this.getClassName = fieldName => {\n      const field = this.state[fieldName];\n      return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n    };\n\n    this.validateForm = newState => {\n      newState = newState || { ...this.state\n      };\n      this.fields.map(fieldName => {\n        let newField = newState[fieldName];\n        newField.errors = [];\n        newField.isValid = true;\n        this.formValidationRules[fieldName].map(vRule => {\n          if (!vRule.rule(this.state[fieldName].value)) {\n            newField.errors.push(vRule.message);\n            newField.isValid = false;\n          }\n\n          newState[fieldName] = newField;\n        });\n      });\n      this.setState(newState);\n    };\n\n    this.formValidationRules = {\n      email: [{\n        rule: validationRules.required,\n        message: \"Email is required\"\n      }, {\n        rule: validationRules.email,\n        message: \"Email is invalid\"\n      }]\n    };\n    this.fields = [\"email\"];\n    this.state = {\n      email: {\n        value: \"\",\n        isTouched: false,\n        isValid: false,\n        errors: []\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.validateForm();\n  }\n\n  render() {\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: !email.isValid ? \"has-error\" : \"\",\n      name: \"email\",\n      value: this.state.email.value,\n      onChange: this.handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }), email.errors.length > 0 && email.errors.map((err, i) => /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 15\n      }\n    }, err))));\n  }\n\n}","map":{"version":3,"sources":["/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js"],"names":["React","makeStyles","TextField","InputLabel","MenuItem","FormHelperText","FormControl","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","testStyles","root","display","width","backgroundColor","test","color","inputStyles","selectStyle","fontSize","fontWeight","paddingTop","paddingBottom","border","boxSizing","usStyles","theme","button","Email","classes","shrink","CompanyName","VASPCode","label","CountryCode","setCountryCode","useState","handleChange","event","target","value","option","CityCode","CompanyID","VASPcatagory","setVASPcatagory","VASPapi","IPAddress","GoLiveDate","selectedDate","setSelectedDate","handleDateChange","date","VASPubKey","setVASPubKey","VASPubKeyType","KeyPair","CTA","Header1","validationRules","required","val","undefined","email","re","String","toLowerCase","Test","Component","constructor","handleFieldChange","e","newState","state","name","validateForm","handleSetTouched","field","isTouched","setState","getClassName","fieldName","isValid","fields","map","newField","errors","formValidationRules","vRule","rule","push","message","componentWillMount","render","length","err","i"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport './styles/form.scss';\n\n//像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404',\n    },\n  },\n  test: {\n    color: '#222b45',\n  }\n});\n\nconst inputStyles = makeStyles({\n  root: {\n    // width: '100%',\n  },\n});\n\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n  },\n});\n\nconst usStyles = makeStyles(theme => ({\n  button: {\n    backgroundColor: '#e9eee9',\n    fontSize: '40px',\n  },\n}));\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return (\n    <div>\n      <FormHelperText>Your valid email address.</FormHelperText>\n      <TextField id=\"Email\" placeholder=\"Input mail address\" \n      InputLabelProps={{ shrink: true }}\n        className={classes.button } \n        helperText=\"Incorrect entry.\" />\n    </div>\n  );\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Your registered company name. Example: \"VASP LTD.\"</FormHelperText>\n      <TextField id=\"CompanyName\" placeholder=\"Your company name\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, }} />\n    </div>\n  );\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      4 uppercase letters to represent your company name. Example: \"Coinbase exchange\" could be \"CBSE\", \"Sygna\" could be \"SYGN\"\n      </FormHelperText>\n      <TextField id=\"VASPCodeName\" placeholder=\"Input VASP code Name\"\n        InputLabelProps={{ shrink: true, }} \n        classes={{ root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n  const handleChange = (event) => {\n    setCountryCode(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"country-code-label\" id=\"country-code\" value={CountryCode} onChange={handleChange} displayEmpty \n        inputProps={{ 'aria-label': 'Without label' }}\n        classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>2 letters city abbreviation. Example: \"NY\"</FormHelperText>\n      <TextField id=\"CityCode\" placeholder=\"Input city code\"\n        InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Company registration code under local jurisdiction.</FormHelperText>\n      <TextField id=\"CompanyID\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n  const handleChange = (event) => {\n    setVASPcatagory(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText></FormHelperText>\n      <Select labelId=\"vasp-catagory\" id=\"vasp-catagory\" value={VASPcatagory} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }} classes={{\n        root: classes.root, label: classes.label,}} >\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      API endpoint for beneficiary VASP to receive API request from Bridge Server (<a href=\"http://bit.ly/2NhZUlS\" target=\"_blank\">http://bit.ly/2NhZUlS</a>).\n    Example: \"<a href=\"#\" target=\"_blank\">beneficiary.example/api/v1/bridge/transaction/permission-request</a>\n      </FormHelperText>\n      <TextField id=\"VASPapi\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      To create a secure communication tunnel between Bridge and VASP servers, \n    Bridge can register VASP server static IP for identification. (optional)\n      </FormHelperText>\n      <TextField id=\"VIPAddress\" placeholder=\"Input fixed static IP address\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.test, }} />\n        <FormHelperText>\n        Wrong\n        </FormHelperText>\n    </div>\n  );\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState('');\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  \n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <FormHelperText>\n        To create a secure communication tunnel between Bridge and VASP servers, \n        Bridge can register VASP server static IP for identification. (optional)\n      </FormHelperText>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        format=\"MM/dd/yyyy\" \n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change date', }}\n      />\n      <KeyboardTimePicker\n        margin=\"normal\"\n        id=\"time-picker\" value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change time', }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n  const handleChange = (event) => {\n    setVASPubKey(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"vasp-pub-key-label\" id=\"vasp-pub-key\" value={VASPubKey} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }}\n      classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select Public Type</MenuItem>\n        <MenuItem value={1}>HEX</MenuItem>\n        <MenuItem value={2}>PEM</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPubKeyType() {\n  return (\n    <TextField id=\"VASPubKeyType\" multiline rows={4} fullWidth={true} \n    placeholder=\"'ex.\\n-----BEGIN PUBLIC KEY-----\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\n-----END PUBLIC KEY-----'\" />\n  );\n}\n\nfunction KeyPair() {\n  return (\n    <div className=\"info\">\n      <h6>Key pair generation</h6>\n      <p>\n        This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to\n        provide the public key to Bridge.\n        <br /><br />\n        Generate an EC private key, of size 256, and output it to a file named key.pem:\n        >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\n        <br /><br />\n        Extract the public key from the key pair, which can be used in the encryption:\n        >> $ openssl ec -in key.pem -pubout -out public.pem\n        <br /><br />\n        After running these two commands you will generate two files: key.pem and public.pem in your working\n        directory. Please provide us with the public.pem\n        key.pem is referenced in the creation of a digital signature on the message. Please take care not to\n        expose the private key. Ensure that you only do so on a system you consider to be secure.\n      </p>\n    </div>\n  );\n}\n\nfunction CTA() {\n  return (\n    <div className=\"cta_block\">\n      <p className=\"text\">\n        If you have any questions with the information in this email, please let us know at <a href=\"mailto:contact@sygna.io\">contact@sygna.io</a> or visit our website at <a href=\"sygna.io\"\n        target=\"_blank\">sygna.io</a>\n      </p>\n      <div className=\"cta\">\n        <input type=\"submit\" name=\"\" value=\"Submit\" className=\"btn btn-primary\" />\n      </div>\n    </div>\n  );\n}\n\n\n//什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\nexport default function Header1() {\n  return (\n    <div className=\"container\">\n      <div className=\"intro\">\n        <h2 className=\"title\">Welcome to Sygna Bridge VASP Registration</h2>\n      </div>\n      <Test />\n      <form id=\"registration_form\" Validate>\n        <div className=\"input-field required\">\n      <h5>Email Address</h5>\n      <Email></Email>\n    </div>\n        <div className=\"input-field required\">\n      <h5>Company Name</h5>\n      <CompanyName></CompanyName>\n    </div>\n        <div className=\"input-field required\">\n      <h5>VASP Code Name</h5>\n      <VASPCode></VASPCode>\n    </div>\n        <div className=\"input-field required\">\n      <h5>Country Code</h5>\n      <CountryCode></CountryCode>\n    </div>\n        <div className=\"input-field required\">\n      <h5>City Code</h5>\n      <CityCode></CityCode>\n    </div>\n        <div className=\"input-field\">\n      <h5>Company ID</h5>\n      <CompanyID></CompanyID>\n    </div>\n        <div className=\"input-field required\">\n      <h5>VASP Category</h5>\n      <VASPcatagory></VASPcatagory>\n    </div>\n        <div className=\"input-field required\">\n      <h5>Beneficiary VASP API endpoint URL</h5>\n      <VASPapi></VASPapi>\n    </div>\n        <div className=\"input-field\">\n          <h5>Fixed static IP Address</h5>\n          <IPAddress></IPAddress>\n        </div>\n        <div className=\"input-field\">\n          <h5>Go-Live Date</h5>\n          <GoLiveDate></GoLiveDate>\n        </div>\n        <div className=\"input-field required\">\n          <h5>VASP Public Key</h5>\n          <VASPubKey></VASPubKey>\n          <VASPubKeyType></VASPubKeyType>\n        </div>\n        <KeyPair />\n        <CTA />\n      </form>\n    </div>\n  )\n};\n\nconst validationRules = {\n  required: (val) => val !== null && val !== undefined && val !== \"\",\n  email: (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n};\nclass Test extends React.Component {\n  constructor() {\n    super();\n    this.formValidationRules = {\n      email: [\n        { rule: validationRules.required, message: \"Email is required\" },\n        { rule: validationRules.email, message: \"Email is invalid\" }\n      ]\n    };\n    this.fields = [\"email\"];\n    this.state = {\n      email: { value: \"\", isTouched: false, isValid: false, errors: [] }\n    };\n  }\n\n  handleFieldChange = (e) => {\n    let newState = { ...this.state };\n    newState[e.target.name].value = e.target.value;\n    this.validateForm(newState);\n  };\n\n  handleSetTouched = (e) => {\n    let field = { ...this.state[e.target.name], isTouched: true };\n    this.setState({ [e.target.name]: { ...field } });\n  };\n\n  getClassName = (fieldName) => {\n    const field = this.state[fieldName];\n    return field.isTouched && !field.isValid ? \"has-error\" : \"\";\n  };\n\n  validateForm = (newState) => {\n    newState = newState || { ...this.state };\n    this.fields.map((fieldName) => {\n      let newField = newState[fieldName];\n      newField.errors = [];\n      newField.isValid = true;\n      this.formValidationRules[fieldName].map((vRule) => {\n        if (!vRule.rule(this.state[fieldName].value)) {\n          newField.errors.push(vRule.message);\n          newField.isValid = false;\n        }\n        newState[fieldName] = newField;\n      });\n    });\n    this.setState(newState);\n  };\n\n  componentWillMount() {\n    this.validateForm();\n  }\n\n  render() {\n    const { email } = this.state;\n    return (\n      <form>\n        <div className=\"field-group\">\n          <label>Email</label>\n          <input\n            className={!email.isValid ? \"has-error\" : \"\"}\n            name=\"email\"\n            value={this.state.email.value}\n            onChange={this.handleFieldChange}\n          />\n          {email.errors.length > 0 &&\n            email.errors.map((err, i) => (\n              <span key={i} className=\"error-message\">\n                {err}\n              </span>\n            ))\n          }\n        </div>\n      </form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}