{"ast":null,"code":"var _jsxFileName = \"/Users/miachiu/Projects/syg_demo_web/src/Content.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport clsx from 'clsx';\nimport Check from '@material-ui/icons/Check';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TabContent from './components/Tab';\nimport Bridge from './components/Info';\nimport Originator from './components/OriVASP'; //測試用\n\nimport OriginInfo from './components/OriVasp/OriginInfo'; //測試用\n\nimport 'typeface-noto-sans';\nimport 'typeface-open-sans';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  stepBlock: {\n    padding: '22px 0 33px'\n  },\n  stepStyle: {\n    width: '100%',\n    maxWidth: '480px',\n    margin: '0 auto',\n    padding: '0',\n    marginTop: '22px'\n  },\n  capitalize: {\n    textTransform: 'capitalize',\n    textAlign: 'center',\n    letterSpacing: '0.25rem',\n    color: '#222b45',\n    fontWeight: '600',\n    fontFamily: 'Open Sans'\n  }\n}));\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 12,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#42826B'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#42826B'\n    }\n  },\n  line: {\n    borderColor: '#9FB6AE',\n    borderTopWidth: 5,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#9FB6AE',\n    display: 'flex',\n    height: 30,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#42826B'\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#42826B',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 62\n    }\n  }));\n}\n\nfunction getSteps() {\n  return ['', '', '', ''];\n}\n\nfunction getStepContent(getSteps) {\n  switch (getSteps) {\n    case 0:\n      return /*#__PURE__*/React.createElement(Originator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 14\n        }\n      });\n\n    case 1:\n      return /*#__PURE__*/React.createElement(OriginInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(Originator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(Originator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nfunction Content() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.capitalize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Description text\"), /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(QontoConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 74\n      }\n    }),\n    className: classes.stepStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: QontoStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, label))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, activeStep !== 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, activeStep === steps.length - 1 ? 'test' : 'Send'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bridge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/miachiu/Projects/syg_demo_web/src/Content.js"],"names":["React","Grid","makeStyles","withStyles","StepConnector","clsx","Check","Stepper","Step","StepLabel","Button","Typography","TabContent","Bridge","Originator","OriginInfo","useStyles","theme","root","flexGrow","stepBlock","padding","stepStyle","width","maxWidth","margin","marginTop","capitalize","textTransform","textAlign","letterSpacing","color","fontWeight","fontFamily","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","display","height","alignItems","circle","backgroundColor","zIndex","fontSize","QontoStepIcon","props","classes","getSteps","getStepContent","Error","Content","activeStep","setActiveStep","useState","steps","handleNext","handleBack","map","label","buttons","button","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport clsx from 'clsx';\nimport Check from '@material-ui/icons/Check';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TabContent from './components/Tab';\nimport Bridge from './components/Info';\nimport Originator from './components/OriVASP'; //測試用\nimport OriginInfo from './components/OriVasp/OriginInfo'; //測試用\nimport 'typeface-noto-sans';\nimport 'typeface-open-sans';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  stepBlock: {\n    padding: '22px 0 33px'\n  },\n  stepStyle: {\n    width: '100%',\n    maxWidth: '480px',\n    margin: '0 auto',\n    padding: '0',\n    marginTop: '22px'\n  },\n  capitalize: {\n    textTransform: 'capitalize',\n    textAlign: 'center',\n    letterSpacing: '0.25rem',\n    color: '#222b45',\n    fontWeight: '600',\n    fontFamily: 'Open Sans',\n  },\n}));\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 12,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  active: {\n    '& $line': {\n      borderColor: '#42826B',\n    },\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#42826B',\n    },\n  },\n  line: {\n    borderColor: '#9FB6AE',\n    borderTopWidth: 5,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#9FB6AE',\n    display: 'flex',\n    height: 30,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#42826B',\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#42826B',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\nfunction getSteps() {\n  return ['', '', '', ''];\n}\n\nfunction getStepContent(getSteps) {\n  switch (getSteps) {\n    case 0:\n      return <Originator />;\n    case 1:\n      return <OriginInfo />;\n    case 2:\n      return <Originator />;\n    case 3:\n      return <Originator />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nfunction Content() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <div className={classes.root}>\n          <div className={classes.stepBlock}>\n            <Typography variant=\"h5\" className={classes.capitalize}>\n              Description text\n            </Typography>\n            <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />} className={classes.stepStyle}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n          </div>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8}>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'test' :'Send'}\n                  </Button>\n                </div>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Bridge />\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}