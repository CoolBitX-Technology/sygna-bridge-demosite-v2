{"ast":null,"code":"var _jsxFileName = \"/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js\";\nimport 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport './styles/form.scss';\nimport Button from '@material-ui/core/Button';\n/* eslint-enable */\n\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'; //像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404'\n    }\n  },\n  test: {\n    color: '#222b45'\n  }\n});\nconst inputStyles = makeStyles({\n  root: {// width: '100%',\n  },\n  props: {\n    // required: true,\n    // Name of the component ⚛️\n    MuiInputBase: {\n      // The default props to change\n      color: '#6600cc',\n      required: true\n    }\n  }\n});\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box'\n  }\n});\nconst usStyles = makeStyles(theme => ({\n  root: {\n    button: {\n      fontSize: '40px',\n      backgroundColor: '#6600cc'\n    }\n  }\n}));\nconst divStyle = {\n  width: 'auto',\n  fontSize: '15px',\n  color: '#222b45',\n  fontWeight: '600',\n  paddingTop: '14px',\n  paddingBottom: '14px',\n  border: '1px solid #c5cee0',\n  backgroundColor: '#f7f9fc',\n  boxSizing: 'border-box'\n};\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Email\",\n    placeholder: \"Input mail address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    type: \"mail\",\n    style: divStyle,\n    helperText: \"Incorrect entry.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Your registered company name. Example: \\\"VASP LTD.\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyName\",\n    placeholder: \"Your company name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root\n    },\n    validators: ['minNumber:0', 'maxNumber:255', 'matchRegexp:^[0-9]$'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"4 uppercase letters to represent your company name. Example: \\\"Coinbase exchange\\\" could be \\\"CBSE\\\", \\\"Sygna\\\" could be \\\"SYGN\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPCodeName\",\n    placeholder: \"Input VASP code Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n\n  const handleChange = event => {\n    setCountryCode(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"country-code-label\",\n    id: \"country-code\",\n    value: CountryCode,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"2 letters city abbreviation. Example: \\\"NY\\\"\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CityCode\",\n    placeholder: \"Input city code\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"Company registration code under local jurisdiction.\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"CompanyID\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n\n  const handleChange = event => {\n    setVASPcatagory(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-catagory\",\n    id: \"vasp-catagory\",\n    value: VASPcatagory,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Other\")));\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, \"API endpoint for beneficiary VASP to receive API request from Bridge Server (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://bit.ly/2NhZUlS\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 84\n    }\n  }, \"http://bit.ly/2NhZUlS\"), \"). Example: \\\"\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"beneficiary.example/api/v1/bridge/transaction/permission-request\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPapi\",\n    placeholder: \"Input company ID\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"VIPAddress\",\n    placeholder: \"Input fixed static IP address\",\n    InputLabelProps: {\n      shrink: true\n    },\n    classes: {\n      root: classes.test\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \"Wrong\"));\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState(new Date(''));\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; // const [selectedDate, handleDateChange] = useState(new Date(''));\n\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, \"Default date: three days after the registration is done.\"), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    format: \"MM/dd/yyyy\",\n    placeholder: 'MM/dd/yyyy',\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    margin: \"normal\",\n    id: \"time-picker\",\n    placeholder: '00:00',\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n\n  const handleChange = event => {\n    setVASPubKey(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"vasp-pub-key-label\",\n    id: \"vasp-pub-key\",\n    value: VASPubKey,\n    onChange: handleChange,\n    displayEmpty: true,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    classes: {\n      root: classes.root,\n      option: classes.option\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, \"Select Public Type\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, \"HEX\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, \"PEM\")));\n}\n\nfunction VASPubKeyType() {\n  return /*#__PURE__*/React.createElement(TextField, {\n    id: \"VASPubKeyType\",\n    multiline: true,\n    rows: 4,\n    fullWidth: true,\n    placeholder: \"'ex.\\\\n-----BEGIN PUBLIC KEY-----\\\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\\\n-----END PUBLIC KEY-----'\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction KeyPair() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, \"Key pair generation\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, \"This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to provide the public key to Bridge.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }), \"Generate an EC private key, of size 256, and output it to a file named key.pem: >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }), \"Extract the public key from the key pair, which can be used in the encryption: >> $ openssl ec -in key.pem -pubout -out public.pem\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), \"After running these two commands you will generate two files: key.pem and public.pem in your working directory. Please provide us with the public.pem key.pem is referenced in the creation of a digital signature on the message. Please take care not to expose the private key. Ensure that you only do so on a system you consider to be secure.\"));\n}\n\nfunction CTA() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta_block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, \"If you have any questions with the information in this email, please let us know at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"mailto:contact@sygna.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 93\n    }\n  }, \"contact@sygna.io\"), \" or visit our website at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"sygna.io\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 172\n    }\n  }, \"sygna.io\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"\",\n    value: \"Submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  })));\n} //什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\n\n\nexport default class Header1 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        email: '',\n        companyname: '',\n        vaspcode: '',\n        countrycode: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n  }\n\n  render() {\n    const {\n      formData,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, \"Welcome to Sygna Bridge VASP Registration\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n      id: \"registration_form\",\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, \"Your valid email address.\"), /*#__PURE__*/React.createElement(TextValidator, {\n      id: \"Email\",\n      placeholder: \"Input mail address\",\n      InputLabelProps: {\n        shrink: true\n      },\n      type: \"mail\",\n      onChange: this.handleChange,\n      name: \"email\",\n      value: formData.email,\n      validators: ['required', 'isEmail'],\n      errorMessages: ['This field is required', 'Email is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, \"Company Name\"), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }, \"Your registered company name. Example: \\\"VASP LTD.\\\"\"), /*#__PURE__*/React.createElement(TextValidator, {\n      id: \"CompanyName\",\n      placeholder: \"Your company name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"companyname\",\n      value: formData.companyname,\n      validators: ['required', 'isString'],\n      errorMessages: ['This field is required', 'Company name is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, \"VASP Code Name\"), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }, \"4 uppercase letters to represent your company name. Example: \\\"Coinbase exchange\\\" could be \\\"CBSE\\\", \\\"Sygna\\\" could be \\\"SYGN\\\"\"), /*#__PURE__*/React.createElement(TextValidator, {\n      id: \"VASPCodeName\",\n      placeholder: \"Input VASP code Name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"vaspcode\",\n      value: formData.vaspcode,\n      validators: ['required', 'isString'],\n      errorMessages: ['This field is required', 'Company name is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }, \"Country Code\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, \"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"), /*#__PURE__*/React.createElement(TextValidator, {\n      select: true,\n      id: \"CountryCode\",\n      value: formData.countrycode.value,\n      onChange: this.handleChange,\n      inputProps: {\n        'aria-label': 'Without label'\n      },\n      className: \"selectStyle\",\n      placeholder: formData.countrycode.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      test: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, \"Virtual/Flat\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, \"Virtual/Virtual\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }\n    }, \"Transfer\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, \"Custodian\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, \"Other\")))), /*#__PURE__*/React.createElement(KeyPair, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CTA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: submitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }, submitted && 'Your form is submitted!' || !submitted && 'Submit')));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js"],"names":["React","makeStyles","TextField","InputLabel","MenuItem","FormHelperText","FormControl","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Button","ValidatorForm","TextValidator","testStyles","root","display","width","backgroundColor","test","color","inputStyles","props","MuiInputBase","required","selectStyle","fontSize","fontWeight","paddingTop","paddingBottom","border","boxSizing","usStyles","theme","button","divStyle","Email","classes","shrink","CompanyName","VASPCode","label","CountryCode","setCountryCode","useState","handleChange","event","target","value","option","CityCode","CompanyID","VASPcatagory","setVASPcatagory","VASPapi","IPAddress","GoLiveDate","selectedDate","setSelectedDate","Date","handleDateChange","date","VASPubKey","setVASPubKey","VASPubKeyType","KeyPair","CTA","Header1","Component","state","formData","email","companyname","vaspcode","countrycode","submitted","name","setState","handleSubmit","setTimeout","render"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport './styles/form.scss';\nimport Button from '@material-ui/core/Button';\n/* eslint-enable */\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n//像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404',\n    },\n  },\n  test: {\n    color: '#222b45',\n  }\n});\n\nconst inputStyles = makeStyles({\n  root: {\n    // width: '100%',\n  },\n  props: {\n    // required: true,\n    // Name of the component ⚛️\n    MuiInputBase: {\n      // The default props to change\n      color: '#6600cc',\n      required: true,\n    },\n  },\n});\n\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n  },\n});\n\nconst usStyles = makeStyles(theme => ({\n  root: {\n    button: {\n      fontSize: '40px',\n      backgroundColor: '#6600cc',\n    },\n  },\n}));\n\nconst divStyle = {\n  width: 'auto',\n  fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n};\n\n\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return (\n    <div>\n      <FormHelperText>Your valid email address.</FormHelperText>\n      <TextField id=\"Email\" placeholder=\"Input mail address\" \n      InputLabelProps={{ shrink: true }}\n      type=\"mail\" style={divStyle}\n        helperText=\"Incorrect entry.\" />\n    </div>\n  );\n}\n\nfunction CompanyName() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Your registered company name. Example: \"VASP LTD.\"</FormHelperText>\n      <TextField id=\"CompanyName\" placeholder=\"Your company name\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, }} validators={['minNumber:0', 'maxNumber:255', 'matchRegexp:^[0-9]$']} />\n    </div>\n  );\n}\n\nfunction VASPCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      4 uppercase letters to represent your company name. Example: \"Coinbase exchange\" could be \"CBSE\", \"Sygna\" could be \"SYGN\"\n      </FormHelperText>\n      <TextField id=\"VASPCodeName\" placeholder=\"Input VASP code Name\"\n        InputLabelProps={{ shrink: true, }} \n        classes={{ root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n  const handleChange = (event) => {\n    setCountryCode(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"country-code-label\" id=\"country-code\" value={CountryCode} onChange={handleChange} displayEmpty \n        inputProps={{ 'aria-label': 'Without label' }}\n        classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction CityCode() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>2 letters city abbreviation. Example: \"NY\"</FormHelperText>\n      <TextField id=\"CityCode\" placeholder=\"Input city code\"\n        InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction CompanyID() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>Company registration code under local jurisdiction.</FormHelperText>\n      <TextField id=\"CompanyID\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction VASPcatagory() {\n  const classes = selectStyle();\n  const [VASPcatagory, setVASPcatagory] = React.useState('');\n  const handleChange = (event) => {\n    setVASPcatagory(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText></FormHelperText>\n      <Select labelId=\"vasp-catagory\" id=\"vasp-catagory\" value={VASPcatagory} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }} classes={{\n        root: classes.root, label: classes.label,}} >\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPapi() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      API endpoint for beneficiary VASP to receive API request from Bridge Server (<a href=\"http://bit.ly/2NhZUlS\" target=\"_blank\">http://bit.ly/2NhZUlS</a>).\n    Example: \"<a href=\"#\" target=\"_blank\">beneficiary.example/api/v1/bridge/transaction/permission-request</a>\n      </FormHelperText>\n      <TextField id=\"VASPapi\" placeholder=\"Input company ID\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.root, label: classes.label, }} />\n    </div>\n  );\n}\n\nfunction IPAddress() {\n  const classes = inputStyles();\n  return (\n    <div>\n      <FormHelperText>\n      To create a secure communication tunnel between Bridge and VASP servers, \n    Bridge can register VASP server static IP for identification. (optional)\n      </FormHelperText>\n      <TextField id=\"VIPAddress\" placeholder=\"Input fixed static IP address\"\n      InputLabelProps={{ shrink: true, }} classes={{\n        root: classes.test, }} />\n        <FormHelperText>\n        Wrong\n        </FormHelperText>\n    </div>\n  );\n}\n\nfunction GoLiveDate() {\n  const classes = testStyles();\n  const [selectedDate, setSelectedDate] = React.useState(new Date(''));\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  // const [selectedDate, handleDateChange] = useState(new Date(''));\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <FormHelperText>\n      Default date: three days after the registration is done.\n      </FormHelperText>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        format=\"MM/dd/yyyy\" \n        placeholder={'MM/dd/yyyy'}\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change date', }}\n      />\n      <KeyboardTimePicker\n        margin=\"normal\"\n        id=\"time-picker\" \n        placeholder={'00:00'}\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{ 'aria-label': 'change time', }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nfunction VASPubKey() {\n  const classes = selectStyle();\n  const [VASPubKey, setVASPubKey] = React.useState('');\n  const handleChange = (event) => {\n    setVASPubKey(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"vasp-pub-key-label\" id=\"vasp-pub-key\" value={VASPubKey} onChange={handleChange} displayEmpty\n      inputProps={{ 'aria-label': 'Without label' }}\n      classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select Public Type</MenuItem>\n        <MenuItem value={1}>HEX</MenuItem>\n        <MenuItem value={2}>PEM</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction VASPubKeyType() {\n  return (\n    <TextField id=\"VASPubKeyType\" multiline rows={4} fullWidth={true} \n    placeholder=\"'ex.\\n-----BEGIN PUBLIC KEY-----\\nMFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKciXy+GOwFZ7JEt+kpcMpFdHkEpzG0ln\\n9XIcNs+Ak5qykSXRF0YnzqgzWnXEg8wA/ZWkEw8V8oPPNd9v5PQynw==\\n-----END PUBLIC KEY-----'\" />\n  );\n}\n\nfunction KeyPair() {\n  return (\n    <div className=\"info\">\n      <h6>Key pair generation</h6>\n      <p>\n        This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to\n        provide the public key to Bridge.\n        <br /><br />\n        Generate an EC private key, of size 256, and output it to a file named key.pem:\n        >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\n        <br /><br />\n        Extract the public key from the key pair, which can be used in the encryption:\n        >> $ openssl ec -in key.pem -pubout -out public.pem\n        <br /><br />\n        After running these two commands you will generate two files: key.pem and public.pem in your working\n        directory. Please provide us with the public.pem\n        key.pem is referenced in the creation of a digital signature on the message. Please take care not to\n        expose the private key. Ensure that you only do so on a system you consider to be secure.\n      </p>\n    </div>\n  );\n}\n\nfunction CTA() {\n  return (\n    <div className=\"cta_block\">\n      <p className=\"text\">\n        If you have any questions with the information in this email, please let us know at <a href=\"mailto:contact@sygna.io\">contact@sygna.io</a> or visit our website at <a href=\"sygna.io\"\n        target=\"_blank\">sygna.io</a>\n      </p>\n      <div className=\"cta\">\n        <input type=\"submit\" name=\"\" value=\"Submit\" className=\"btn btn-primary\" />\n      </div>\n    </div>\n  );\n}\n\n\n//什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\nexport default class Header1 extends React.Component {\n  state = {\n    formData: {\n        email: '',\n        companyname: '',\n        vaspcode: '',\n        countrycode: '',\n    },\n    submitted: false,\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleSubmit = () => {\n    this.setState({ submitted: true }, () => {\n        setTimeout(() => this.setState({ submitted: false }), 5000);\n    });\n  }\n  render() {\n    const { formData, submitted } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"intro\">\n          <h2 className=\"title\">Welcome to Sygna Bridge VASP Registration</h2>\n        </div>\n        <ValidatorForm id=\"registration_form\"\n              ref=\"form\"\n              onSubmit={this.handleSubmit}\n        > \n          <div className=\"input-field required\">\n            <h5>Email Address</h5>\n            <FormHelperText>Your valid email address.</FormHelperText>\n            <TextValidator id=\"Email\" placeholder=\"Input mail address\" \n              InputLabelProps={{ shrink: true }}\n              type=\"mail\" \n              onChange={this.handleChange}\n              name=\"email\"\n              value={formData.email}\n              validators={['required', 'isEmail']}\n              errorMessages={['This field is required', 'Email is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>Company Name</h5>\n            <FormHelperText>Your registered company name. Example: \"VASP LTD.\"</FormHelperText>\n            <TextValidator id=\"CompanyName\" placeholder=\"Your company name\" \n              InputLabelProps={{ shrink: true }}\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"companyname\"\n              value={formData.companyname}\n              validators={['required', 'isString']}\n              errorMessages={['This field is required', 'Company name is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>VASP Code Name</h5>\n            <FormHelperText>4 uppercase letters to represent your company name. Example: \"Coinbase exchange\" could be \"CBSE\", \"Sygna\" could be \"SYGN\"</FormHelperText>\n            <TextValidator id=\"VASPCodeName\" placeholder=\"Input VASP code Name\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"vaspcode\"\n              value={formData.vaspcode}\n              validators={['required', 'isString']}\n              errorMessages={['This field is required', 'Company name is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>Country Code</h5>\n            <FormControl variant=\"outlined\">\n              <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n              <TextValidator select id=\"CountryCode\" value={formData.countrycode.value} onChange={this.handleChange}  \n                inputProps={{ 'aria-label': 'Without label' }} className=\"selectStyle\" placeholder={formData.countrycode.test}\n              >\n                <MenuItem test>Select</MenuItem>\n                <MenuItem value={1}>Virtual/Flat</MenuItem>\n                <MenuItem value={2}>Virtual/Virtual</MenuItem>\n                <MenuItem value={3}>Transfer</MenuItem>\n                <MenuItem value={4}>Custodian</MenuItem>\n                <MenuItem value={5}>Other</MenuItem>\n              </TextValidator>\n            </FormControl>\n          </div>\n          <KeyPair />\n          <CTA />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={submitted}\n          >\n            {\n              (submitted && 'Your form is submitted!')\n              || (!submitted && 'Submit')\n            }\n          </Button>\n        </ValidatorForm>\n      </div>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}