{"ast":null,"code":"import _classCallCheck from\"/Users/miachiu/Projects/sygna-brige/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/miachiu/Projects/sygna-brige/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/miachiu/Projects/sygna-brige/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/miachiu/Projects/sygna-brige/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _slicedToArray from\"/Users/miachiu/Projects/sygna-brige/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'date-fns';import React from'react';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import DateFnsUtils from'@date-io/date-fns';import{MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker}from'@material-ui/pickers';import'./styles/form.scss';import Button from'@material-ui/core/Button';/* eslint-enable */import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';//像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\nvar testStyles=makeStyles({root:{display:'inline-block',width:'50%',backgroundColor:'#e9eee9','.test':{backgroundColor:'#0404'}},test:{color:'#222b45'}});var inputStyles=makeStyles({root:{// width: '100%',\n},props:{// required: true,\n// Name of the component ⚛️\nMuiInputBase:{// The default props to change\ncolor:'#6600cc',required:true}}});var selectStyle=makeStyles({root:{fontSize:'15px',color:'#222b45',fontWeight:'600',paddingTop:'14px',paddingBottom:'14px',border:'1px solid #c5cee0',backgroundColor:'#f7f9fc',boxSizing:'border-box'}});var usStyles=makeStyles(function(theme){return{root:{button:{fontSize:'40px',backgroundColor:'#6600cc'}}};});var divStyle={width:'auto',fontSize:'15px',color:'#222b45',fontWeight:'600',paddingTop:'14px',paddingBottom:'14px',border:'1px solid #c5cee0',backgroundColor:'#f7f9fc',boxSizing:'border-box'};// input\nfunction Email(){var classes=[inputStyles(),usStyles()];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormHelperText,null,\"Your valid email address.\"),/*#__PURE__*/React.createElement(TextField,{id:\"Email\",placeholder:\"Input mail address\",InputLabelProps:{shrink:true},type:\"mail\",style:divStyle,helperText:\"Incorrect entry.\"}));}// select\nfunction CountryCode(){var classes=selectStyle();var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),CountryCode=_React$useState2[0],setCountryCode=_React$useState2[1];var handleChange=function handleChange(event){setCountryCode(event.target.value);};return/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\"},/*#__PURE__*/React.createElement(FormHelperText,null,\"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"),/*#__PURE__*/React.createElement(Select,{labelId:\"country-code-label\",id:\"country-code\",value:CountryCode,onChange:handleChange,displayEmpty:true,inputProps:{'aria-label':'Without label'},classes:{root:classes.root,option:classes.option}},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},\"Select\"),/*#__PURE__*/React.createElement(MenuItem,{value:1},\"Virtual/Flat\"),/*#__PURE__*/React.createElement(MenuItem,{value:2},\"Virtual/Virtual\"),/*#__PURE__*/React.createElement(MenuItem,{value:3},\"Transfer\"),/*#__PURE__*/React.createElement(MenuItem,{value:4},\"Custodian\"),/*#__PURE__*/React.createElement(MenuItem,{value:5},\"Other\")));}function KeyPair(){return/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"h6\",null,\"Key pair generation\"),/*#__PURE__*/React.createElement(\"p\",null,\"This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to provide the public key to Bridge.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Generate an EC private key, of size 256, and output it to a file named key.pem: >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Extract the public key from the key pair, which can be used in the encryption: >> $ openssl ec -in key.pem -pubout -out public.pem\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"After running these two commands you will generate two files: key.pem and public.pem in your working directory. Please provide us with the public.pem key.pem is referenced in the creation of a digital signature on the message. Please take care not to expose the private key. Ensure that you only do so on a system you consider to be secure.\"));}function CTA(){return/*#__PURE__*/React.createElement(\"div\",{className:\"cta_block\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text\"},\"If you have any questions with the information in this email, please let us know at \",/*#__PURE__*/React.createElement(\"a\",{href:\"mailto:contact@sygna.io\"},\"contact@sygna.io\"),\" or visit our website at \",/*#__PURE__*/React.createElement(\"a\",{href:\"sygna.io\",target:\"_blank\"},\"sygna.io\")),/*#__PURE__*/React.createElement(\"div\",{className:\"cta\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",name:\"\",value:\"Submit\",className:\"btn btn-primary\"})));}//什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\nvar Header1=/*#__PURE__*/function(_React$Component){_inherits(Header1,_React$Component);var _super=_createSuper(Header1);function Header1(){var _this;_classCallCheck(this,Header1);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={formData:{email:'',companyname:'',vaspcode:'',countrycode:'',vaspapi:''},submitted:false};_this.handleChange=function(event){var formData=_this.state.formData;formData[event.target.name]=event.target.value;_this.setState({formData:formData});};_this.handleSubmit=function(){_this.setState({submitted:true},function(){setTimeout(function(){return _this.setState({submitted:false});},5000);});};return _this;}_createClass(Header1,[{key:\"render\",value:function render(){var _this$state=this.state,formData=_this$state.formData,submitted=_this$state.submitted;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"intro\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"Welcome to Sygna Bridge VASP Registration\")),/*#__PURE__*/React.createElement(ValidatorForm,{id:\"registration_form\",ref:\"form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Email Address\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"Your valid email address.\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"Email\",placeholder:\"Input mail address\",InputLabelProps:{shrink:true},type:\"mail\",onChange:this.handleChange,name:\"email\",value:formData.email,validators:['required','isEmail'],errorMessages:['This field is required','Email is not valid']})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Company Name\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"Your registered company name. Example: \\\"VASP LTD.\\\"\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"CompanyName\",placeholder:\"Your company name\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"companyname\",value:formData.companyname,validators:['required','isString'],errorMessages:['This field is required','Company name is not valid']})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"VASP Code Name\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"4 uppercase letters to represent your company name. Example: \\\"Coinbase exchange\\\" could be \\\"CBSE\\\", \\\"Sygna\\\" could be \\\"SYGN\\\"\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"VASPCodeName\",placeholder:\"Input VASP code Name\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"vaspcode\",value:formData.vaspcode,validators:['required','isString'],errorMessages:['This field is required','VASP code name is not valid']})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Country Code\"),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\"},/*#__PURE__*/React.createElement(FormHelperText,null,\"Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.\"),/*#__PURE__*/React.createElement(TextValidator,{select:true,id:\"CountryCode\",value:formData.countrycode.value,onChange:this.handleChange,inputProps:{'aria-label':'Without label'},className:\"selectStyle\",placeholder:formData.countrycode.test},/*#__PURE__*/React.createElement(MenuItem,{test:true},\"Select\"),/*#__PURE__*/React.createElement(MenuItem,{value:1},\"Virtual/Flat\"),/*#__PURE__*/React.createElement(MenuItem,{value:2},\"Virtual/Virtual\"),/*#__PURE__*/React.createElement(MenuItem,{value:3},\"Transfer\"),/*#__PURE__*/React.createElement(MenuItem,{value:4},\"Custodian\"),/*#__PURE__*/React.createElement(MenuItem,{value:5},\"Other\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"City Code\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"2 letters city abbreviation. Example: \\\"NY\\\"\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"CityCode\",placeholder:\"Input city code\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"citycode\",value:formData.citypcode,validators:['required','isString','minStringLength: 2','maxStringLength: 2'],errorMessages:['This field is required','City code is not valid']})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Company ID\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"Company registration code under local jurisdiction.\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"CompanyID\",placeholder:\"Input company ID\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"company_id\",value:formData.companyid})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field required\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Beneficiary VASP API endpoint URL\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"API endpoint for beneficiary VASP to receive API request from Bridge Server (\",/*#__PURE__*/React.createElement(\"a\",{href:\"http://bit.ly/2NhZUlS\",target:\"_blank\"},\"http://bit.ly/2NhZUlS\"),\"). Example: \\\"\",/*#__PURE__*/React.createElement(\"a\",{href:\"#\",target:\"_blank\"},\"beneficiary.example/api/v1/bridge/transaction/permission-request\")),/*#__PURE__*/React.createElement(TextValidator,{id:\"VASPapi\",placeholder:\"Input beneficiary VASP API endpoint URL\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"vaspapi\",value:formData.vaspapi})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Fixed static IP Address\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"VIPAddress\",placeholder:\"Input fixed static IP address\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"vip_address\",value:formData.vip_address})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Go-Live Date\"),/*#__PURE__*/React.createElement(FormHelperText,null,\"Default date: three days after the registration is done.\"),/*#__PURE__*/React.createElement(TextValidator,{id:\"go_live_date\",placeholder:\"YY/MM/DD 00:00\",InputLabelProps:{shrink:true},type:\"text\",onChange:this.handleChange,name:\"go_live_date\"})),/*#__PURE__*/React.createElement(KeyPair,null),/*#__PURE__*/React.createElement(CTA,null)));}}]);return Header1;}(React.Component);export{Header1 as default};;","map":{"version":3,"sources":["/Users/miachiu/Projects/sygna-brige/src/RegistrationForm.js"],"names":["React","makeStyles","TextField","InputLabel","MenuItem","FormHelperText","FormControl","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Button","ValidatorForm","TextValidator","testStyles","root","display","width","backgroundColor","test","color","inputStyles","props","MuiInputBase","required","selectStyle","fontSize","fontWeight","paddingTop","paddingBottom","border","boxSizing","usStyles","theme","button","divStyle","Email","classes","shrink","CountryCode","useState","setCountryCode","handleChange","event","target","value","option","KeyPair","CTA","Header1","state","formData","email","companyname","vaspcode","countrycode","vaspapi","submitted","name","setState","handleSubmit","setTimeout","citypcode","companyid","vip_address","Component"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport './styles/form.scss';\nimport Button from '@material-ui/core/Button';\n/* eslint-enable */\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n//像 class 一樣可存在多個於js檔裡\n//適合客製化 / 增加不同元素\n\nconst testStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    width: '50%',\n    backgroundColor: '#e9eee9',\n    '.test': {\n      backgroundColor: '#0404',\n    },\n  },\n  test: {\n    color: '#222b45',\n  }\n});\n\nconst inputStyles = makeStyles({\n  root: {\n    // width: '100%',\n  },\n  props: {\n    // required: true,\n    // Name of the component ⚛️\n    MuiInputBase: {\n      // The default props to change\n      color: '#6600cc',\n      required: true,\n    },\n  },\n});\n\nconst selectStyle = makeStyles({\n  root: {\n    fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n  },\n});\n\nconst usStyles = makeStyles(theme => ({\n  root: {\n    button: {\n      fontSize: '40px',\n      backgroundColor: '#6600cc',\n    },\n  },\n}));\n\nconst divStyle = {\n  width: 'auto',\n  fontSize: '15px',\n    color: '#222b45',\n    fontWeight: '600',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    border: '1px solid #c5cee0',\n    backgroundColor: '#f7f9fc',\n    boxSizing: 'border-box',\n};\n\n// input\nfunction Email() {\n  const classes = [inputStyles(), usStyles()];\n  return (\n    <div>\n      <FormHelperText>Your valid email address.</FormHelperText>\n      <TextField id=\"Email\" placeholder=\"Input mail address\" \n      InputLabelProps={{ shrink: true }}\n      type=\"mail\" style={divStyle}\n        helperText=\"Incorrect entry.\" />\n    </div>\n  );\n}\n// select\nfunction CountryCode() {\n  const classes = selectStyle();\n  const [CountryCode, setCountryCode] = React.useState('');\n  const handleChange = (event) => {\n    setCountryCode(event.target.value);\n  };\n  return (\n    <FormControl variant=\"outlined\">\n      <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n      <Select labelId=\"country-code-label\" id=\"country-code\" value={CountryCode} onChange={handleChange} displayEmpty \n        inputProps={{ 'aria-label': 'Without label' }}\n        classes={{ root: classes.root, option: classes.option, }}>\n        <MenuItem value=\"\">Select</MenuItem>\n        <MenuItem value={1}>Virtual/Flat</MenuItem>\n        <MenuItem value={2}>Virtual/Virtual</MenuItem>\n        <MenuItem value={3}>Transfer</MenuItem>\n        <MenuItem value={4}>Custodian</MenuItem>\n        <MenuItem value={5}>Other</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction KeyPair() {\n  return (\n    <div className=\"info\">\n      <h6>Key pair generation</h6>\n      <p>\n        This short guide will help you to generate a key pair via the OpenSSL command line tool, in order to\n        provide the public key to Bridge.\n        <br /><br />\n        Generate an EC private key, of size 256, and output it to a file named key.pem:\n        >> $ openssl ecparam -name secp256k1 -genkey -out key.pem\n        <br /><br />\n        Extract the public key from the key pair, which can be used in the encryption:\n        >> $ openssl ec -in key.pem -pubout -out public.pem\n        <br /><br />\n        After running these two commands you will generate two files: key.pem and public.pem in your working\n        directory. Please provide us with the public.pem\n        key.pem is referenced in the creation of a digital signature on the message. Please take care not to\n        expose the private key. Ensure that you only do so on a system you consider to be secure.\n      </p>\n    </div>\n  );\n}\n\nfunction CTA() {\n  return (\n    <div className=\"cta_block\">\n      <p className=\"text\">\n        If you have any questions with the information in this email, please let us know at <a href=\"mailto:contact@sygna.io\">contact@sygna.io</a> or visit our website at <a href=\"sygna.io\"\n        target=\"_blank\">sygna.io</a>\n      </p>\n      <div className=\"cta\">\n        <input type=\"submit\" name=\"\" value=\"Submit\" className=\"btn btn-primary\" />\n      </div>\n    </div>\n  );\n}\n\n\n//什麼都不講的狀況下會選 default 引入，像 id 一樣只能存在一個於js檔裡\n//適合做基礎樣式\nexport default class Header1 extends React.Component {\n  state = {\n    formData: {\n        email: '',\n        companyname: '',\n        vaspcode: '',\n        countrycode: '',\n        vaspapi: '',\n    },\n    submitted: false,\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleSubmit = () => {\n    this.setState({ submitted: true }, () => {\n        setTimeout(() => this.setState({ submitted: false }), 5000);\n    });\n  }\n  render() {\n    const { formData, submitted } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"intro\">\n          <h2 className=\"title\">Welcome to Sygna Bridge VASP Registration</h2>\n        </div>\n        <ValidatorForm id=\"registration_form\"\n              ref=\"form\"\n              onSubmit={this.handleSubmit}\n        > \n          <div className=\"input-field required\">\n            <h5>Email Address</h5>\n            <FormHelperText>Your valid email address.</FormHelperText>\n            <TextValidator id=\"Email\" placeholder=\"Input mail address\" \n              InputLabelProps={{ shrink: true }}\n              type=\"mail\" \n              onChange={this.handleChange}\n              name=\"email\"\n              value={formData.email}\n              validators={['required', 'isEmail']}\n              errorMessages={['This field is required', 'Email is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>Company Name</h5>\n            <FormHelperText>Your registered company name. Example: \"VASP LTD.\"</FormHelperText>\n            <TextValidator id=\"CompanyName\" placeholder=\"Your company name\" \n              InputLabelProps={{ shrink: true }}\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"companyname\"\n              value={formData.companyname}\n              validators={['required', 'isString']}\n              errorMessages={['This field is required', 'Company name is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>VASP Code Name</h5>\n            <FormHelperText>4 uppercase letters to represent your company name. Example: \"Coinbase exchange\" could be \"CBSE\", \"Sygna\" could be \"SYGN\"</FormHelperText>\n            <TextValidator id=\"VASPCodeName\" placeholder=\"Input VASP code Name\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"vaspcode\"\n              value={formData.vaspcode}\n              validators={['required', 'isString']}\n              errorMessages={['This field is required', 'VASP code name is not valid']} \n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>Country Code</h5>\n            <FormControl variant=\"outlined\">\n              <FormHelperText>Country location of your company jurisdiction. Please follow ISO 3166-1 alpha-2 country code.</FormHelperText>\n              <TextValidator select id=\"CountryCode\" value={formData.countrycode.value} onChange={this.handleChange}  \n                inputProps={{ 'aria-label': 'Without label' }} className=\"selectStyle\" placeholder={formData.countrycode.test}\n              >\n                <MenuItem test>Select</MenuItem>\n                <MenuItem value={1}>Virtual/Flat</MenuItem>\n                <MenuItem value={2}>Virtual/Virtual</MenuItem>\n                <MenuItem value={3}>Transfer</MenuItem>\n                <MenuItem value={4}>Custodian</MenuItem>\n                <MenuItem value={5}>Other</MenuItem>\n              </TextValidator>\n            </FormControl>\n          </div>\n          <div className=\"input-field required\">\n            <h5>City Code</h5>\n            <FormHelperText>2 letters city abbreviation. Example: \"NY\"</FormHelperText>\n            <TextValidator id=\"CityCode\" placeholder=\"Input city code\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"citycode\"\n              value={formData.citypcode}\n              validators={['required', 'isString', 'minStringLength: 2', 'maxStringLength: 2']}\n              errorMessages={['This field is required', 'City code is not valid']} \n            />\n          </div>\n          <div className=\"input-field\">\n            <h5>Company ID</h5>\n            <FormHelperText>Company registration code under local jurisdiction.</FormHelperText>\n            <TextValidator id=\"CompanyID\" placeholder=\"Input company ID\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"company_id\"\n              value={formData.companyid}\n            />\n          </div>\n          <div className=\"input-field required\">\n            <h5>Beneficiary VASP API endpoint URL</h5>\n            <FormHelperText>API endpoint for beneficiary VASP to receive API request from Bridge Server (<a href=\"http://bit.ly/2NhZUlS\" target=\"_blank\">http://bit.ly/2NhZUlS</a>).\n    Example: \"<a href=\"#\" target=\"_blank\">beneficiary.example/api/v1/bridge/transaction/permission-request</a></FormHelperText>\n            <TextValidator id=\"VASPapi\" placeholder=\"Input beneficiary VASP API endpoint URL\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"vaspapi\"\n              value={formData.vaspapi}\n            />\n          </div>\n          <div className=\"input-field\">\n            <h5>Fixed static IP Address</h5>\n            <FormHelperText>To create a secure communication tunnel between Bridge and VASP servers, Bridge can register VASP server static IP for identification. (optional)</FormHelperText>\n            <TextValidator id=\"VIPAddress\" placeholder=\"Input fixed static IP address\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"vip_address\"\n              value={formData.vip_address}\n            />\n          </div>\n          <div className=\"input-field\">\n            <h5>Go-Live Date</h5>\n            <FormHelperText>Default date: three days after the registration is done.</FormHelperText>\n            <TextValidator id=\"go_live_date\" placeholder=\"YY/MM/DD 00:00\"\n              InputLabelProps={{ shrink: true }}\n              type=\"text\" \n              onChange={this.handleChange}\n              name=\"go_live_date\"\n            />\n          </div>\n          <KeyPair />\n          <CTA />\n        </ValidatorForm>\n      </div>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}